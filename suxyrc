#!/bin/bash

# This is a personal environment setting script of Xingyu Su
# You can find me at http://suxy.info
#  ____       __  ____   __
# / ___| _   _\ \/ /\ \ / /
# \___ \| | | |\  /  \ V /
#  ___) | |_| |/  \   | |
# |____/ \__,_/_/\_\  |_|
#
# Copyright 2020 Xingyu Su

# = = = = = = = = = = = = = = = =
# for env
export PATH="$PATH:/usr/local/sbin:/usr/local/bin"

# = = = = = = = = = = = = = = = =
# for zsh
export DISABLE_AUTO_UPDATE=true
export ZSH="$HOME/.oh-my-zsh"
plugins=(
    git tmux extract
    zsh-autosuggestions zsh-syntax-highlighting 
)
ZSH_THEME="fishy"

# = = = = = = = = = = = = = = = =
# for python
alias python='/usr/bin/env python3'
alias python2='/usr/bin/env python'
alias pip='/usr/bin/env pip3'
alias pip2='/usr/bin/env pip'
alias note="jupyter notebook"

# = = = = = = = = = = = = = = = =
# for git
alias gs='git status'
alias ga='git add'
alias gc='git commit -m'
alias gp='git push'

# = = = = = = = = = = = = = = = =
# for vim

# = = = = = = = = = = = = = = = =
# for GPG
export GPG_TTY=$(tty)

# = = = = = = = = = = = = = = = =
# for convenience
alias inet='ifconfig | grep inet\ '
alias htop="htop --sort-key PERCENT_CPU"
alias rmds='find . -name ".DS_Store" -depth -exec rm {} \;'

# = = = = = = = = = = = = = = = =
# zsh functions
# find $2 in $1 with name matching
ft(){
    find . -name *"$2"* -exec grep -il "$1" {} \;
}

# mkdir and cd
mcd(){
    mkdir -p "$1" && cd "$1";
}

# extract files
ext(){
    if [ -f $1 ]; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

# encode some files
encode(){
  echo -n "Encrypt password:"
  read -s passwd
  echo ""
  for i in $*
  do
    echo $i
    openssl enc -e -aes-128-cbc -in $i -out en${i:2} -pass pass:$passwd
  done
}

# decode some files
decode(){
  echo -n "Password required:"
  read -s passwd
  echo ""
  for i in $*
  do
    echo $i
    openssl enc -d -aes-128-cbc -in $i -out de${i:2} -pass pass:$passwd
  done
}

# count chinese characters' number in latex
texcount(){
  let "tot_zh_num=0"
  let "tot_en_num=0"
  echo "zh" "\t" "en"
  for i in $*
  do
    let "cnum=$(detex $i | wc -c)"
    let "mnum=$(detex $i | wc -m)"
    let "wnum=$(detex $i | wc -w)"
    let "zh_num=($cnum-$mnum)/2"
    let "en_num=$wnum"
    let "tot_zh_num=$tot_zh_num+$zh_num"
    let "tot_en_num=$tot_en_num+$en_num"
    echo $zh_num "\t" $en_num "\t" $i
  done
  echo $tot_zh_num "\t" $tot_en_num
}

# connect server jupyter by ssh port forward
jupyter_forward(){
    ssh -N -f -L "localhost:"$5":localhost:"$4 $1@$2 -p $3
}

# kill all ssh forward
jupyter_forward_killall(){
    ps -ef | grep "ssh -N" | grep -v "grep" |awk '{print $2}' | xargs kill -9
}

# show weather for three days
weather(){
  if [[ -v 1 ]]; then
    echo "curl zh.wttr.in/"$1"?format=v2"
    curl "zh.wttr.in/$1?format=v2"
  else
    echo "curl zh.wttr.in/Beijing:Haidian?format=v2"
    curl "zh.wttr.in/Beijing:Haidian?format=v2"
  fi
}
